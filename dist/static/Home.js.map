{"version":3,"file":"Home.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChzFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAKA;AAGA;AAEA;;;;AACA;;AAAA;AACA;;;AACA;AAEA","sources":["webpack://manual-isomorphism/./src/Home/index.less?369c","webpack://manual-isomorphism/./isomorphic-style-loader/dist/insertCss.js","webpack://manual-isomorphism/./isomorphic-style-loader/dist/useStyles.js","webpack://manual-isomorphism/./src/Home/index.less","webpack://manual-isomorphism/./node_modules/css-loader4/dist/runtime/api.js","webpack://manual-isomorphism/./mock/list.ts","webpack://manual-isomorphism/./src/Home/index.tsx"],"sourcesContent":["\n    var refs = 0;\n    var getCss = (css) => {\n                return css.default;\n              };\n    var css = getCss(require(\"!!../../node_modules/css-loader4/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/less-loader/dist/cjs.js!./index.less\"));\n    var insertCss = require(\"!../../isomorphic-style-loader/dist/insertCss.js\");\n    var content = typeof css === 'string' ? [[module.id, css, '']] : css;\n\n    exports = module.exports = css.locals || {};\n    exports._getContent = function() { return content; };\n    exports._getCss = function() { return '' + css; };\n    exports._insertCss = function(options) { return insertCss(content, options) };\n\n    // Hot Module Replacement\n    // https://webpack.github.io/docs/hot-module-replacement\n    // Only activated in browser context\n    if (module.hot && typeof window !== 'undefined' && window.document) {\n      var removeCss = function() {};\n      module.hot.accept(\"!!../../node_modules/css-loader4/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n        css = require(\"!!../../node_modules/css-loader4/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../node_modules/less-loader/dist/cjs.js!./index.less\");\n        content = typeof css === 'string' ? [[module.id, css, '']] : css;\n        removeCss = insertCss(content, { replace: true });\n      });\n      module.hot.dispose(function() { removeCss(); });\n    }\n  ","/*! Isomorphic Style Loader | MIT License | https://github.com/kriasoft/isomorphic-style-loader */\n\n'use strict';\n\nvar inserted = {};\nfunction b64EncodeUnicode(str) {\n  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n    return String.fromCharCode(\"0x\" + p1);\n  }));\n}\nfunction removeCss(ids) {\n  ids.forEach(function (id) {\n    if (--inserted[id] <= 0) {\n      var elem = document.getElementById(id);\n      if (elem) {\n        elem.parentNode.removeChild(elem);\n      }\n    }\n  });\n}\nfunction insertCss(styles, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$replace = _ref.replace,\n    replace = _ref$replace === void 0 ? false : _ref$replace,\n    _ref$prepend = _ref.prepend,\n    prepend = _ref$prepend === void 0 ? false : _ref$prepend,\n    _ref$prefix = _ref.prefix,\n    prefix = _ref$prefix === void 0 ? 's' : _ref$prefix;\n  var ids = [];\n  for (var i = 0; i < styles.length; i++) {\n    var _styles$i = styles[i],\n      moduleId = _styles$i[0],\n      css = _styles$i[1],\n      media = _styles$i[2],\n      sourceMap = _styles$i[3];\n    var id = \"\" + prefix + moduleId + \"-\" + i;\n    ids.push(id);\n    if (inserted[id]) {\n      if (!replace) {\n        inserted[id]++;\n        continue;\n      }\n    }\n    inserted[id] = 1;\n    var elem = document.getElementById(id);\n    var create = false;\n    if (!elem) {\n      create = true;\n      elem = document.createElement('style');\n      elem.setAttribute('type', 'text/css');\n      elem.id = id;\n      if (media) {\n        elem.setAttribute('media', media);\n      }\n    }\n    var cssText = css;\n    if (sourceMap && typeof btoa === 'function') {\n      cssText += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + b64EncodeUnicode(JSON.stringify(sourceMap)) + \"*/\";\n      cssText += \"\\n/*# sourceURL=\" + sourceMap.file + \"?\" + id + \"*/\";\n    }\n    if ('textContent' in elem) {\n      elem.textContent = cssText;\n    } else {\n      elem.styleSheet.cssText = cssText;\n    }\n    if (create) {\n      if (prepend) {\n        document.head.insertBefore(elem, document.head.childNodes[0]);\n      } else {\n        document.head.appendChild(elem);\n      }\n    }\n  }\n  return removeCss.bind(null, ids);\n}\nmodule.exports = insertCss;\n//# sourceMappingURL=insertCss.js.map\n","/*! Isomorphic Style Loader | MIT License | https://github.com/kriasoft/isomorphic-style-loader */\n\n'use strict';\n\nvar react = require('react');\nvar StyleContext = require('./StyleContext.js');\n\nvar _this = undefined;\nvar isBrowser = function () {\n  return _this && typeof _this.window === 'object';\n}();\nfunction useStyles() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n  var _useContext = react.useContext(StyleContext),\n    insertCss = _useContext.insertCss;\n  if (!insertCss) throw new Error('Please provide \"insertCss\" function by StyleContext.Provider');\n  var runEffect = function runEffect() {\n    var removeCss = insertCss.apply(void 0, styles);\n    return function () {\n      setTimeout(removeCss, 0);\n    };\n  };\n  if (isBrowser) {\n    react.useEffect(runEffect, []);\n  } else {\n    runEffect();\n  }\n}\n\nmodule.exports = useStyles;\n//# sourceMappingURL=useStyles.js.map\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader4/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".EjoAOH9llLZiIKIOlDX\\\\+tA\\\\=\\\\= {\\n  color: red;\\n  line-height: 30px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/Home/index.less\"],\"names\":[],\"mappings\":\"AAAA;EACE,UAAA;EACA,iBAAA;EACA,sBAAA;EACA,kBAAA;AACF\",\"sourcesContent\":[\".line {\\n  color: red;\\n  line-height: 30px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"line\": \"EjoAOH9llLZiIKIOlDX+tA==\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","interface Item {\n  name: string;\n  age: number;\n}\nexport const list: Item[] = [\n  {\n    name: \"Bob\",\n    age: 20,\n  },\n];\n\nexport const getList = () => {\n  console.log(\"invoke\");\n  return Promise.resolve(list);\n};\n","import { getList } from \"../../mock/list\";\nimport { useDataFromLoader } from \"../../utils/useDataFromLoader\";\nimport styles from \"./index.less\";\nimport useStyles from \"isomorphic-style-loader/useStyles\";\nimport { useState } from \"react\";\n\nconst Home = () => {\n  useStyles(styles);\n  const list = useDataFromLoader(Home.loader);\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <span onClick={() => setCount(count + 1)}>Hello world!{count}</span>\n\n      {list.map((item) => {\n        return (\n          <div className={styles.line} key={item.name}>\n            {item.name}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nHome.loader = async () => {\n  const data = await getList();\n  return data;\n};\n\nexport { Home };\n"],"names":[],"sourceRoot":""}