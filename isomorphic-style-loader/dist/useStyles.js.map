{"version":3,"file":"useStyles.js","sources":["src/useStyles.js"],"sourcesContent":["/**\n * Isomorphic CSS style loader for Webpack\n *\n * Copyright Â© 2015-present Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport { useContext, useEffect } from 'react'\nimport StyleContext from './StyleContext'\n\n// To detect if it's in SSR process or in browser. Wrapping with\n// the function makes rollup's replacement of \"this\" avoidable\n// eslint-disable-next-line func-names\nconst isBrowser = (() => this && typeof this.window === 'object')()\n\nfunction useStyles(...styles) {\n  const { insertCss } = useContext(StyleContext)\n  if (!insertCss) throw new Error('Please provide \"insertCss\" function by StyleContext.Provider')\n  const runEffect = () => {\n    const removeCss = insertCss(...styles)\n    return () => {\n      setTimeout(removeCss, 0)\n    }\n  }\n  if (isBrowser) {\n    useEffect(runEffect, [])\n  } else {\n    runEffect()\n  }\n}\n\nexport default useStyles\n"],"names":["isBrowser","_this","window","useStyles","_len","arguments","length","styles","Array","_key","_useContext","useContext","StyleContext","insertCss","Error","runEffect","removeCss","apply","setTimeout","useEffect"],"mappings":";;;;;;;;AAeA,IAAMA,SAAS,GAAI;EAAA,OAAMC,KAAI,IAAI,OAAOA,KAAI,CAACC,MAAM,KAAK,QAAQ;AAAA,GAAG;AAEnE,SAASC,SAASA,GAAY;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAARC,MAAM,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAANF,MAAM,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;;EAC1B,IAAAC,WAAA,GAAsBC,gBAAU,CAACC,YAAY,CAAC;IAAtCC,SAAS,GAAAH,WAAA,CAATG,SAAS;EACjB,IAAI,CAACA,SAAS,EAAE,MAAM,IAAIC,KAAK,CAAC,8DAA8D,CAAC;EAC/F,IAAMC,SAAS,GAAG,SAAZA,SAASA,GAAS;IACtB,IAAMC,SAAS,GAAGH,SAAS,CAAAI,KAAA,SAAIV,MAAM,CAAC;IACtC,OAAO,YAAM;MACXW,UAAU,CAACF,SAAS,EAAE,CAAC,CAAC;KACzB;GACF;EACD,IAAIhB,SAAS,EAAE;IACbmB,eAAS,CAACJ,SAAS,EAAE,EAAE,CAAC;GACzB,MAAM;IACLA,SAAS,EAAE;;AAEf;;;;"}